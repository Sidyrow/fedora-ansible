---
- name: Fedora NetInstall Setup 1
  hosts: localhost
  become: true
  vars_files:
    - vars.yml

  tasks:

    - name: Atualizar o sistema
      dnf:
        name: "*"
        state: latest
        update_cache: yes

    - name: Install terminus console fonts
      dnf:
        name: terminus-fonts-console
        state: present

    - name: Setup terminus font
      command: setfont ter-118n
      
    - name: Instalar RPM Fusion
      shell: |
        dnf install -y https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm \
                       https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm

    - name: Instalar repositórios adicionais do Fedora
      dnf:
        name: fedora-workstation-repositories
        state: present

    - name: Instalar drivers e codecs (NVIDIA)
      block:
        - name: Instalar drivers da NVIDIA e CUDA
          dnf:
            name:
              - akmod-nvidia
              - xorg-x11-drv-nvidia-cuda
              - xorg-x11-drv-nvidia-cuda-libs
              - nvidia-vaapi-driver
            state: present

        - name: Substituir ffmpeg-free por ffmpeg completo
          command: dnf swap -y ffmpeg-free ffmpeg --allowerasing

        - name: Atualizar grupo Multimedia
          shell: dnf group install -y multimedia --exclude=PackageKit-gstreamer-plugin

        - name: Atualizar grupo Sound and Video
          command: dnf group install -y sound-and-video

        - name: H/W Video Decoding with VA-API
          dnf:
            name: 
              - ffmpeg-libs
              - libva
              - libva-utils
            state: present

        - name: Pausar após instalação dos drivers
          debug:
            msg: |
              Reboot necessário após instalação da NVIDIA. Edite vars.yml e defina `skip_nvidia_setup: true`
              para continuar após reiniciar.
          failed_when: true
      when: not skip_nvidia_setup

    - name: Instalar Xorg e ferramentas base
      dnf:
        name:
          - "@base-x"
          - xorg-x11-server-Xorg
          - xorg-x11-drv-evdev
          - xorg-x11-drv-libinput
          - xset
          - xrandr
          - xbacklight
        state: present

    - name: Instalar dependências para Qtile via Git
      dnf:
        name:
          - git
          - python3-pip
          - cairo-devel
          - gobject-introspection-devel
          - libev-devel
          - xcb-util-devel
          - xcb-util-keysyms-devel
          - xcb-util-wm-devel
          - xcb-util-xrm-devel
          - libffi-devel
          - python3-cairocffi
          - python3-xcffib
        state: present

    - name: Instalar Google Chrome
      dnf:
        name: google-chrome-stable
        enablerepo: google-chrome
        state: present

    - name: Configurar nome do usuário Git global
      git_config:
        name: user.name
        scope: global
        value: "{{ my_user }}"
      become: false

    - name: Configurar email do usuário Git global
      git_config:
        name: user.email
        scope: global
        value: "{{ my_email }}"
      become: false

    - name: Configurar editor padrão do Git Global
      git_config:
        name: core.editor
        scope: global
        value: vim
      become: false
    
    - name: Clonar repositório do Qtile
      git:
        repo: https://github.com/qtile/qtile.git
        dest: "/home/{{ my_user }}/qtile"
        version: master
      become: false

    - name: Instalar Qtile via pip (local user)
      command: pip install --break-system-packages .
      args:
        chdir: "/home/{{ my_user }}/qtile"
      become: false

    - name: Criar ~/.xinitrc com exec qtile start
      copy:
        dest: "/home/{{ my_user }}/.xinitrc"
        content: "exec qtile start\n"
        owner: "{{ my_user }}"
        mode: '0644'

    - name: Instalar utilitários e apps multimídia
      dnf:
        name:
          - zathura
          - zathura-pdf-poppler
          - imv
          - rofi
          - pipewire
          - wireplumber
          - pavucontrol
          - alsa-utils
          - vlc
          - firefox
          - curl
          - cabextract
          - xorg-x11-font-utils
          - fontconfig
          - gvfs
          - gvfs-mtp
          - udiskie
          - fish
          - tmux
          - neovim
          - wget
          - thunar
          - thunar-volman
          - thunar-archive-plugin
          - tumbler
          - alacritty
          - p7zip
          - unzip 
          - p7zip-plugins
          - unrar
          - vim
          - dejavu-sans-mono-fonts
          - virt-manager
        state: present

    # Install fonts
    - name: Install MS fonts
      command: dnf install -y https://downloads.sourceforge.net/project/mscorefonts2/rpms/msttcore-fonts-installer-2.6-1.noarch.rpm
            
    - name: Criar diretório de fontes nerd
      file:
        path: "/usr/share/fonts/{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - Iosevka
        - JetBrainsMono
        - RobotoMono
        - NerdFontsSymbolsOnly
        - UbuntuMono
        - UbuntuSans
        - FantasqueSansMono

    - name: Baixar e extrair Nerd Fonts
      unarchive:
        src: "{{ item.url }}"
        dest: "/usr/share/fonts/{{ item.dir }}"
        remote_src: yes
      loop:
        - { url: "https://github.com/ryanoasis/nerd-fonts/releases/download/v3.4.0/Iosevka.zip", dir: "Iosevka" }
        - { url: "https://github.com/ryanoasis/nerd-fonts/releases/download/v3.4.0/JetBrainsMono.zip", dir: "JetBrainsMono" }
        - { url: "https://github.com/ryanoasis/nerd-fonts/releases/download/v3.4.0/RobotoMono.zip", dir: "RobotoMono" }
        - { url: "https://github.com/ryanoasis/nerd-fonts/releases/download/v3.4.0/NerdFontsSymbolsOnly.zip", dir: "NerdFontsSymbolsOnly" }
        - { url: "https://github.com/ryanoasis/nerd-fonts/releases/download/v3.4.0/UbuntuMono.zip", dir: "UbuntuMono" }
        - { url: "https://github.com/ryanoasis/nerd-fonts/releases/download/v3.4.0/UbuntuSans.zip", dir: "UbuntuSans" }
        - { url: "https://github.com/ryanoasis/nerd-fonts/releases/download/v3.4.0/FantasqueSansMono.zip", dir: "FantasqueSansMono" }

    - name: Atualizar cache de fontes
      command: fc-cache -fv

    # Docker install
    - name: Enable dnf config-manager
      dnf:
        name: dnf-plugins-core
        state: present

    - name: Set up docker repository
      command: dnf-3 config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo

    - name: Install docker
      dnf: 
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Ensure group "docker" exists
      group:
        name: docker
        state: present

    - name: adding existing user "{{ my_user }}" to group sudo
      user:
        name: "{{ my_user }}"
        groups: docker
        shell: /usr/bin/fish
        append: yes

    - name: Reboot System
      debug:
        msg: 
          - "Reboot your system and enjoy!"
